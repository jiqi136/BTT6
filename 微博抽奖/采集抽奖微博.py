
# -*- coding:utf-8
from 网页采集公共库 import 类一一采集公共库# 导入模块
import grequests  # 并发协程
import requests  # 网页浏览
import re  # 正则式
import time  # 时间
import datetime  # 时间
import os  # 本地操作
import pymysql  # 数据库
import random  # 随机
from lxml import etree  # 网页分析
from selenium.webdriver.support import expected_conditions as EC #=判断网页文本

import shutil  # 移动复制文件目录
from lxml import html  # 网页分析
from selenium import webdriver  # 浏览的驱动
import win32api  # 操作本地文件
import asyncio, aiohttp # 异步浏览
import pyautogui  # 键盘控制


class 类一一采集抽奖微博(类一一采集公共库): #调用 类的模具 self.模具一一数据库()
    def __init__(self):
        self.内容链接组列表 = []
        self.数据库名 = "微博抽奖"
        self.今天时间 = str(time.strftime("%y-%m-%d", time.localtime()))
        self.转发 = "否"
        self.sql语句 = "SELECT `原创链接` FROM `微博抽奖转发内容`"  # SQL 查询语句


        self.模具一一内容数据库()
        self.原创链接组列表 = str(self.数据库内容组列表)

        self.模具一一高位换头部信息()
        self.模具一一抽奖网站列表内容()

        self.模具一一换ip连接二()





    def 模具一一示例(self):
        pass

    def 模具一一抽奖网站列表内容(self):

        起始数,范围数=1,6
        self.结束循环 = ''


        for i in range(1,4): #  11 搜索至 50页
            抽奖网站列表 = []

            for 页数 in range(起始数,范围数):
                抽奖页数网址='https://s.weibo.com/weibo?q=%E8%BD%AC%20%E6%8A%BD&scope=ori&suball=1&Refer=SWeibo_box&page={}'.format(页数)#'代入 '{}' 原创 转 抽
                抽奖网站列表.append(抽奖页数网址)
            print('抽奖网站列表:',抽奖网站列表)
            self.返回网页一链接组列表=self.模具一一gr无序网址列表请求返回网页内容(抽奖网站列表)
            self.模具一一分解网页内容()

            
            if '结束循环' in self.结束循环: #  break # 结束循环 continue # 跳过当前循环,继续进行下一轮循环
                break  # 结束循环
            else:# 否则
                起始数,范围数 = 起始数+5, 范围数+5

    def 模具一一分解网页内容(self):
        for 返回网页一链接组列表 in self.返回网页一链接组列表:
            返回网页内容=返回网页一链接组列表[0]
            网页网址 = 返回网页一链接组列表[0]

            # print('返回网页内容:', 返回网页内容.text)


            self.帖子内容html = etree.HTML(返回网页内容.text)


            # ========端口列表
            # print('内容:', 内容)
            规则 = '//*[@id="pl_feedlist_index"]/div[2]/div[*]/div/div[1]/div[1]/a/img/@src'  # /@href  text()

            内容列表 = self.帖子内容html.xpath(规则)

            # print('内容列表:', 内容列表)
            总数 = len(内容列表) + 1
            print('总数:', 总数)

            for self.序数 in range(1, 总数):
                认证规则 = '//*[@id="pl_feedlist_index"]/div[2]/div[{}]/div/div[1]/div[2]/div/div[2]/a[2]/@title'.format(
                    self.序数)  # '代入 '{}'  # /@href  text()
                try:  # 调用异常处理,应对易发生错误的位置

                    认证内容 = self.帖子内容html.xpath(认证规则)
                except:  # 异常处理

                    认证内容 = ''
                    continue  # 跳过循环

                else:  # 必须放在所有的except子句之后.这个子句将在try子句没有发生任何异常的时候执行.
                    if '认证' in str(认证内容):
                        self.模具一一抽奖选取条件()
                    else:  # 否则
                        continue  # 跳过循环

                    
                    

    def 模具一一抽奖选取条件(self):



        def 模具一转发内容清洗(转发内容列表):
            合成内容=''
            for 转发内容 in 转发内容列表:


                转发内容 = 转发内容.replace("'", '”')  # 替换   , 1) 次数 1
                转发内容 = 转发内容.replace('"', '”')  # 替换   , 1) 次数 1
                转发内容 = 转发内容.replace(' ', '')  # 替换   , 1) 次数 1
                转发内容 = 转发内容.replace('\n', '')  # 替换   , 1) 次数 1
                转发内容 = 转发内容.replace('\u200b', '')  # 替换   , 1) 次数 1
                转发内容 = 转发内容.strip()  # 默认则是去除空格
                if len(转发内容)>0:
                    合成内容 =合成内容+转发内容+' '

            合成内容 =合成内容.strip()  # 默认则是去除空格
            return 合成内容#返回

        def 模具一转抽词组列表过滤(内容):
            转抽词组列表 = ['抽样', '抽那', '探抽', '抽讽', '抽打', '抽头', '抽收', '抽摘', '抽马', '抽恸', '抽答', '抽地', '抽达', '抽胁', '抽擢', '抽捐',
                      '抽芽', '抽暇', '抽取', '抽丁', '抽课', '抽付', '抽测', '抽思', '抽解', '抽动', '抽咽', '抽进', '抽冯', '抽空', '抽穗',
                      '抽屉', '抽茧', '抽择', '抽烟', '抽纱', '抽风', '抽替', '抽吸', '抽噎', '抽翰', '抽脚', '抽丝', '抽搭', '抽绎', '抽搐', '抽买',
                      '抽贯', '勾抽', '抽换', '抽列', '抽筋', '抽导', '抽搦', '抽身', '抽匣', '抽厘', '抽回', '抽写', '抽拔', '抽心', '抽痉', '抽子',
                      '抽签', '抽扬', '抽肠', '抽球', '抽送', '抽毁', '抽簪', '抽裂', '抽引', '抽象', '抽气', '抽调', '抽膘', '抽彩', '抽敛', '抽薹',
                      '抽拨', '抽毫', '抽查', '抽沙', '抽干', '抽援', '抽斗', '抽泣', '抽掣', '抽剥', '抽缩', '抽盘', '抽啜', '抽丰', '抽分', '抽条',
                      '抽印', '抽演', '抽苔', '抽税', '抽征', '抽抽', '抽逃', '抽考', '抽割', '抽拣', '抽绪', '抽闲', '抽鼻子', '抽藤条', '抽陀螺',
                      '抽心舍', '抽水站', '抽功夫', '打抽丰', '抽冷子', '抽屉原则', '抽黄对白', '抽筋拔骨', '抽梁换柱', '抽水马桶', '抽秘骋妍', '抽筋剥皮', '抽刀断丝',
                      '抽演微言', '抽象思维', '抽象艺术', '抽象劳动', '抽簪散发', '抽丝剥茧', '春蚕抽丝', '剔抽禿刷', '退步抽身', '有抽有长', '擢发抽肠', '皮里抽肉',
                      '呕心抽肠', '刮骨抽筋', '釜底抽薪', '独茧抽丝', '抽样检验', '抽抽趔趔', '抽简禄马', '抽拔幽陋', '抽祕骋妍', '抽检禄马', '抽刀断水', '抽抽搭搭',
                      '过桥抽板', '隳胆抽肠', '乞抽扢叉', '沥胆抽肠', '抽象概念', '抽抽噎噎', '抽薪止沸', '抽样调查', '抽青配白', '抽胎换骨', '抽纱服装', '抽丁拔楔',
                      '抽抽搐搐', '抽钉拔楔', '抽象主义', '拔丁抽楔', '散发抽簪', '剔抽秃揣', '剔抽秃刷', '线抽傀儡', '剥皮抽筋', '剥茧抽丝', '病去如抽丝', '具体与抽象',
                      '倒抽了一口气', '抽多补少', '抽肥补瘦', '转脱', '转旋', '转播', '转托', '转腾', '转速', '转悠', '转子', '转湾', '转台', '转型', '转辙',
                      '转质', '转折', '转职', '转帐', '转易', '转音', '转仄', '转魄', '辀转', '转厅', '转行', '转头', '转腰', '转眄', '转讽', '转烛',
                      '转柁', '转引', '转资', '转县', '中转', '转账', '转盻', '转船', '转句', '转训', '转场', '转篷', '转斗', '转劫', '转藏', '转业',
                      '转鼓', '转脐', '转目', '转向', '转脸', '转軐', '转对', '转佛', '转读', '转规', '转地', '转科', '转递', '转世', '转文', '转叙',
                      '转入', '转房', '转塔', '转租', '转合', '转漕', '转饷', '转生', '转蓬', '转粟', '转角', '转来', '转布', '转制', '转变', '转海',
                      '转辚', '转动', '转位', '转尸', '转帖', '转圜', '转任', '转病', '转午', '转韵', '转踏', '转式', '转纽', '转理', '转炉', '转子',
                      '自转', '转汇', '转送', '转导', '转弄', '转灯', '转流', '转计', '转鼻', '转回', '转喉', '转续', '转化', '转轼', '转碟', '转授',
                      '转炼', '转品', '转雷', '转般', '转舵', '转炉', '转述', '转食', '转帆', '转柂', '转首', '转换', '转附', '转杯', '哀转', '转拐',
                      '转餉', '转卖', '踅转', '循转', '旋转', '炫转', '遗转', '移转', '一转', '游转', '转体', '语转', '玉转', '圜转', '圆转', '折转',
                      '轸转', '支转', '走转', '转学', '转药', '转阳', '转速', '转正', '拨转', '抃转', '拗转', '挑转', '使转', '省转', '打转', '搭转',
                      '兜转', '电转', '挽转', '婉转', '推转', '午转', '丸转', '宛转', '覃转', '特转', '送转', '前转', '入转', '稔转', '荣转', '磨转',
                      '明转', '扭转', '旁转', '逆转', '内转', '蓬转', '飘转', '偏转', '拧转', '还转', '化转', '好转', '进转', '雷转', '揽转', '救转',
                      '流转', '缭转', '反转', '掉转', '对转', '公转', '复转', '全转', '平转', '潜转', '迁转', '蜣转', '转席', '转立', '转运', '转乘',
                      '转粮', '转调', '转年', '转旗', '转身', '转轴', '转水', '转马', '转迁', '转眼', '转牒', '转语', '转告', '转营', '转义', '转捩',
                      '转商', '转瞬', '转漏', '转移', '转报', '转弦', '转录', '转接', '转经', '转碟', '转产', '转交', '转肩', '转石', '转衔', '转限',
                      '转徙', '转战', '转解', '转擢', '转萍', '转责', '转让', '转滚', '转乡', '转致', '转车', '转局', '转话', '转睐', '转译', '转椅',
                      '转师', '转门', '转系', '转员', '转游', '转輠', '转死', '转转', '转辗', '转赠', '转餫', '转笔', '转辞', '转踅', '转点', '转置',
                      '转毂', '转益', '转眴', '转街', '转轮', '转圆', '转借', '转弯', '转磨', '转寄', '转去', '转登', '转耍', '转货', '转盼', '转展',
                      '转机', '转延', '自转', '转背', '转口', '转贩', '转晃', '转睛', '转载', '转步', '转写', '转详', '转补', '转动', '转岗', '转注',
                      '转嫁', '转邻', '转手', '转馈', '转钱', '转官', '转念', '转顾', '转薄', '转筋', '转抄', '转达', '转圈', '转伸', '转节', '转物',
                      '转锈', '转丸', '转关', '转诊', '转跃', '转历', '转胞', '转剧', '转侧', '转鬻', '眩转', '眴转', '团转', '蜿转', '斡转', '优转',
                      '偃转', '萦转', '运转', '周转', '转输', '转睫', '转道', '转居', '转天', '转盘', '转筹', '展转', '辗转', '转面', '左转', '承转',
                      '车转', '递转', '倒转', '补转', '别转', '变转', '傍转', '百转', '超转', '漕转', '暗转', '时转', '升转', '戍转', '输转', '外转',
                      '退转', '通转', '调转', '动转', '喉转', '回转', '环转', '换转', '九转', '交转', '地转', '斗转', '掇转', '夺转', '兑转', '毂转',
                      '鼓转', '滚转', '改转', '凤转', '返转', '飞转', '翻转', '溜转', '馈转', '空转', '宽转', '漏转', '例转', '买转', '撵转', '轮转',
                      '捩转', '龙转', '批转', '盘转', '牛转草', '逆转录', '流转税', '溜溜转', '连珠转', '轮转椅', '九转丹', '回转仪', '急转弯', '九转鼎',
                      '二人转', '团团转', '不转头', '大寛转', '打转转', '中转站', '转速比', '远兜转', '一转念', '一转眼', '五更转', '宛转绳', '转基因', '转学生',
                      '转般仓', '转蓬身', '转角头', '转关床', '转轮藏', '转般法', '转子莲', '转莲花', '转化糖', '转折点', '转一趟', '转风钱', '转运使', '反转来',
                      '反转片', '兜得转', '不转睛', '不转眼', '连轴转', '六转儿', '捻转儿', '捻捻转', '农转非', '三转身', '双转马', '电转儿', '转枝花', '再转复',
                      '转捩点', '一转手', '一转语', '旋转轴', '转化率', '转矢气', '转三桥', '转日莲', '转关桥', '转角子', '转腰子', '转轮王', '转字锁', '转关系',
                      '转日回天', '转战千里', '转死沟渠', '转轮圣王', '转祸为福', '转弯抹角', '转氨基酶', '转眼之间', '转斗千里', '转来转去', '转喉触讳', '转转宛宛',
                      '转入地下', '转念之间', '转瞬之间', '转海回天', '转悲为喜', '转轮手枪', '转关緑腰', '转东过西', '最大转矩', '转面无情', '转口贸易', '转败为成',
                      '旋转干坤', '旋转磁场', '眼不转睛', '旋干转坤', '悬崖转石', '油回磨转', '游回磨转', '运转时来', '战斗转弯']
            for 转抽词 in 转抽词组列表:
                if 转抽词 in 内容:
                    转抽词组列表过滤='转抽词组列表过滤'
                    return 转抽词组列表过滤  # 返回

            return # 返回


        转发内容规则 = '//*[@id="pl_feedlist_index"]/div[2]/div[{}]/div/div[1]/div[2]/p[1]//text()'.format(
            self.序数)  # '代入 '{}'  # /@href  text()
        转发内容列表= self.帖子内容html.xpath(转发内容规则)
        print('转发内容列表:',转发内容列表)

        内容 = 模具一转发内容清洗(转发内容列表)
        self.转发内容 =内容
        print('转发内容:',self.转发内容)


        self.原创链接规则 = '//*[@id="pl_feedlist_index"]/div[2]/div[{}]/div/div[1]/div[2]/p[*]/a[1]/@href'.format(
            self.序数)  # '代入 '{}'  # /@href  text()
        self.微博用户规则 = '//*[@id="pl_feedlist_index"]/div[2]/div[{}]/div/div[1]/div[2]/div[1]/div[2]/a[1]/text()'.format(
            self.序数)  # '代入 '{}'  # /@href  text()

        转抽词组列表过滤=模具一转抽词组列表过滤(内容)
        if '过滤' in str(转抽词组列表过滤)  :  # 其它条件.
            return  # 返回

        elif '血' in 内容 or '签' in 内容 or '税' in 内容 or '检' in 内容:  # 其它条件.
            return  # 返回



        if '卷' in 内容 or '卡' in 内容  or '圈' in 内容 :   # 其它条件.
            return  # 返回

        elif '红包' in 内容 and '天猫' in 内容:  # 其它条件.
            return  # 返回

        elif '奖' not in 内容:
            if '送' in 内容 or '现金' in 内容 or '机会' in 内容 or '粉丝' in 内容 or '元' in 内容 or '现金' in 内容 or '获' in 内容 or '机会' in 内容 or '礼包' in 内容 or '开' in 内容 or '红包' in 内容:
                self.模具一一提取链接并合成内容链接组()

        elif '奖' in 内容:  # break # 结束循环 continue # 跳过当前循环,继续进行下一轮循环
            if '送' in 内容 or '现金' in 内容 or '机会' in 内容 or '粉丝' in 内容 or '元' in 内容 or '现金' in 内容 or '获' in 内容 or '机会' in 内容 or '礼包' in 内容 or '开' in 内容 or '红包' in 内容:

                self.模具一一提取链接并合成内容链接组()

        elif '评论' in 内容 or '评选' in 内容 and '粉丝' not in 内容:
            if '送' in 内容 or '现金' in 内容 or '机会' in 内容 or '元' in 内容 or '现金' in 内容 or '奖' in 内容 or '获' in 内容 or '机会' in 内容 or '礼包' in 内容 or '开' in 内容 or '红包' in 内容:
                self.模具一一提取链接并合成内容链接组()
        else:  # 否则
            return  # 返回



    def 模具一一提取链接并合成内容链接组(self):
        原创链接列表 = self.帖子内容html.xpath(self.原创链接规则)

        self.原创链接 = 'https:' + 原创链接列表[-1]
        if self.原创链接 in self.原创链接组列表:
            print('原创链接已存在,过滤,跳过')
            self.结束循环 = '结束循环'
            return  # 返回
        else:  # 否则

            微博用户列表 = self.帖子内容html.xpath(self.微博用户规则)
            self.微博用户 = 微博用户列表[0]

            print('self.微博用户:', self.微博用户)
            print('self.转发内容:', self.转发内容)
            print('self.原创链接:', self.原创链接)

            print('================================')
            内容链接组 = []
            内容链接组.append(self.微博用户)
            内容链接组.append(self.转发内容)
            内容链接组.append(self.原创链接)

            self.内容链接组列表.append(内容链接组)

            self.sql语句 = """INSERT INTO `微博抽奖转发内容`( `转发`,`微博用户`, `转发内容`, `原创链接`,`日期`) VALUES("{}","{}","{}","{}","{}")""".format(
                self.转发,self.微博用户, self.转发内容, self.原创链接, self.今天时间)  # 不换行 end= # SQL 插入语句
            # print('sql\n', self.sql语句)
            self.模具一一内容数据库("添加 转发内容 条目")

class 类一一自动浏览器转发微博(类一一采集公共库):  # 调用 类的模具 self.模具一一数据库()
    def __init__(self):

        self.模具一一启动自动浏览器()

        print('启动自动浏览器:')



        self.模具一一高位换头部信息()
        # self.模具一一提取微博帐号()
        self.模具一一提取否转发微博()
        self.模具一一逐个转发微博()


    def 模具一一随机转发文字(self):
        内容 = '收录最新抽奖微博'
        文本列表 = list(内容)  # 转为列表
        计数器 = 0
        文本 = ''

        for 每个字 in 文本列表:
            计数器 = 计数器 + 1

            if 计数器 == 4:
                符号表 = random.choice(' ´`ˆ')
                每个字 = 每个字 + 符号表
                计数器 = 0
            文本 = 文本 + 每个字


        self.随机转发文字=文本.strip(符号表)#默认则是去除空格
        print('随机转发文字',self.随机转发文字)

    def 模具一一逐个转发微博(self):

        self.否转发微博链接组列表=list(self.否转发微博链接组列表)
        self.否转发微博链接组列表.reverse()# 反向列表中元素


        for 否转发微博链接组 in self.否转发微博链接组列表:

            self.数据库id=否转发微博链接组[0]
            self.转发微博链接 = 否转发微博链接组[1]

            开始时间计数 = int(time.time())


            条件循环 = 1
            while 条件循环 == 1:  # 条件循环  break # 结束循环 continue # 跳过当前循环,继续进行下一轮循环
                self.浏览器操作.get(self.转发微博链接)
                time.sleep(5)  # 等待  # 增加延迟
                self.浏览器操作.implicitly_wait(20)  # 隐式等待
                浏览器重启 =self.模具一一判断登录正常()
                if '浏览器重启' in str(浏览器重启):
                    print('浏览器重启:')
                    self.浏览器操作.quit()  # .退出浏览器
                    time.sleep(2)  # 等待  # 增加延迟
                    self.模具一一启动自动浏览器()
                    time.sleep(3)  # 等待  # 增加延迟
                else:  #否则
                    条件循环 = 998
            # 点击.click() 或  输入.send_keys("python3")  请空输入框:clear()
            """点击  转发链接 按钮  变更序号 替换为//*[@id="plc_main"]/div[1]/div[1]  """
            self.浏览器操作.find_element_by_xpath('//*[@id="plc_main"]/div[1]/div[1]/div/div/div/div[2]/div/ul/li[2]/a/span/span/span/em[1]').click()  # 点击  转发 按钮
            time.sleep(1)  # 等待  # 增加延迟
            """输入"""
            #self.模具一一随机转发文字()
            self.随机转发文字="#热门抽奖分享#"
            self.浏览器操作.find_element_by_xpath('//*[@id="plc_main"]/div[1]/div[1]/div/div/div/div[5]/div/div[3]/div/div/div/div/div/div[1]/textarea').send_keys(self.随机转发文字)  # 输入
            time.sleep(1)  # 等待  # 增加延迟

            """点击  转发 按钮"""
            self.浏览器操作.find_element_by_xpath(
                '//*[@id="plc_main"]/div[1]/div[1]/div/div/div/div[5]/div/div[3]/div/div/div/div/div/div[2]/div[1]/a').click()  # 点击  转发 按钮

            time.sleep(1)  # 等待  # 增加延迟

            self.模具一一已转发微博更新数据库()
            print('成功转发抽奖微博:',self.转发微博链接)

            正常60秒后 = 开始时间计数+320
            当下时间数 = int(time.time())

            if 当下时间数 < 正常60秒后:
                print('60秒才转发微博,等待:', 正常60秒后 - 当下时间数, '秒')
                time.sleep(正常60秒后 - 当下时间数)  # 等待  # 增加延迟


    def 模具一一已转发微博更新数据库(self):
        self.sql语句 = "UPDATE `微博抽奖转发内容` SET `转发`='是' WHERE `ID`={}".format(self.数据库id)#'代入 '{}' #'

        self.模具一一内容数据库("更新 转发栏为 是")

    def 模具一一提取微博帐号(self):
        self.数据库名 = "微博抽奖"
        self.sql语句 = "SELECT `密码`,`邮箱`,`自动浏览器cookie` FROM `微博帐号` WHERE `ID`=1 "#' '{}' # SQL 查询语句

        self.模具一一内容数据库()
        密码邮箱cookie组= self.数据库内容组列表[0]
        self.微博密码 =密码邮箱cookie组[0]
        self.微博邮箱 = 密码邮箱cookie组[1]
        self.微博cookie = 密码邮箱cookie组[2]

    def 模具一一提取否转发微博(self):
        self.数据库名 = "微博抽奖"

        self.sql语句 = "SELECT `ID`,`原创链接` FROM `微博抽奖转发内容` WHERE `转发` = '否' "  # ' '{}' # SQL 查询语句
        self.模具一一内容数据库()
        self.否转发微博链接组列表= self.数据库内容组列表

    def 模具一一启动自动浏览器(self):
        def 换头部信息():

            头部信息 = "user-agent=" + self.头部信息['User-Agent']
            print('头部信息:', 头部信息)
            self.Chrome控制.add_argument(头部信息)
        # 换头部信息()

        # ====控制
        self.Chrome控制 = webdriver.ChromeOptions()  # 设置控制

        self.Chrome控制.add_argument('disable-infobars')  # 加启动配置 去除正在受到自动软件的控制
        用户数据目录 = r'C:\Users\Administrator\AppData\Local\Google\Chrome\User Data'
        self.Chrome控制.add_argument('--user-data-dir={}'.format(用户数据目录))  # '代入{}'  # 设置成用户自己的数据目录

        # 点击.click() 或  输入.send_keys("python3")  请空输入框:clear()

        self.浏览器操作 = webdriver.Chrome(chrome_options=self.Chrome控制)  # 打开chrome浏览器

        self.浏览器操作.maximize_window()  # 浏览器全屏显示,不带参数

        #time.sleep(2)  # 等待  # 增加延迟
        #url = "https://weibo.com/u/6802429462/home?topnav=1&wvr=6"  #
        #self.浏览器操作.get(url)
        #time.sleep(3)  # 等待  # 增加延迟



    def 模具一一判断登录正常(self):
        # ===判断页面 无 '要求注册'
        浏览器重启 = ''

        定位 = ("xpath", '//*[@id="pl_common_top"]/div/div/div[3]/div[1]/ul/li[5]/a/em[2]')

        判断文本 = r"抽开奖"

        try:  # 调用异常处理,应对易发生错误的位置
            要求注册True = EC.text_to_be_present_in_element(定位, 判断文本)(self.浏览器操作)

        except:  # 异常处理 (,)as 异常原因
            print('异常,已退出登录')
            浏览器重启 = '浏览器重启'
            return 浏览器重启  # 返回
            # print(异常原因 )
        else:  # 必须放在所有的except子句之后.这个子句将在try子句没有发生任何异常的时候执行.
            if 要求注册True == True:
                print('登录正常')
                return 浏览器重启  # 返回

            else:  #
                print('否,已退出登录')
                浏览器重启 = '浏览器重启'
                return 浏览器重启  # 返回




    def 模具一一示例(self):
        pass



if __name__ == '__main__':
    #类=类一一采集抽奖微博()
    类 = 类一一自动浏览器转发微博()




